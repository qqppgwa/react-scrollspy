{"version":3,"sources":["component/Dot/Styled.js","component/Dot/index.js","component/Dot/Dot.js","component/Pagination/Styled.js","component/Pagination/index.js","component/Pagination/Pagination.js","AppStyled.js","App.js","reportWebVitals.js","index.js"],"names":["Dot","styled","div","sectionRef","index","getBoundingClientRect","y","useState","isActive","onClick","scrollIntoView","behavior","className","classnames","active","Dots","Pagination","sectionsRefArr","activeOffsetRange","setActiveOffsetRange","activeIndex","useEffect","window","addEventListener","checkIsInActiveRange","getActiveIndexOffsetRange","range","map","section","start","top","end","bottom","console","log","scrollOffset","pageYOffset","findIndex","Section","height","background","App","refSec1","useRef","refSec2","refSec3","setSectionRefArr","current","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPACaA,EAAMC,IAAOC,IAAV,uL,wBCADF,ECOC,SAAC,GAA2B,IAAzBG,EAAwB,EAAxBA,WAAwB,KAAZC,MACfD,EAAWE,wBAAjBC,EACwBC,sBAFS,mBAElCC,EAFkC,UAqBzC,OACE,cAACR,EAAD,CACES,QAlB4B,WAC9BN,EAAWO,eAAe,CAAEC,SAAU,YAmBpCC,UAAWC,IAAW,CACpBC,OAAQN,OCjCHO,EAAOd,IAAOC,IAAV,kMCAFc,ECGI,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eAAqB,EACSV,qBADT,mBAClCW,EADkC,KACfC,EADe,OAEHZ,qBAFG,mBAElCa,EAFkC,UAGzCC,qBAAU,WACR,IAAKJ,EAAgB,OAAO,KAExBC,EACFI,OAAOC,iBAAiB,SAAUC,GAIpCC,MACC,CAACP,IAGJ,IAAMO,EAA4B,WAChC,IAAMC,EAAK,OAAGT,QAAH,IAAGA,OAAH,EAAGA,EAAgBU,KAAI,SAACC,EAASxB,GAI1C,MAAO,CAAEyB,MAHKZ,EAAeb,GAAOC,wBAAwByB,IAG5CC,IAFJd,EAAeb,GAAOC,wBAAwB2B,WAI5DC,QAAQC,IAAI,YACZf,EAAqBO,IAIjBF,EAAuB,WAO3B,GAFAS,QAAQC,IAAI,MACZD,QAAQC,IAAIhB,GACPA,EAAL,CACA,IAAMiB,EAAeb,OAAOc,YAC5BH,QAAQC,IAAIhB,GACZ,IAAME,EAAW,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAmBmB,WAAU,SAACX,EAAOtB,GAAW,IAC1DyB,EAAeH,EAAfG,MAAOE,EAAQL,EAARK,IACf,OAAOI,GAAgBN,GAASM,EAAeJ,KAEjDE,QAAQC,IAAId,KAGd,OACE,cAACL,EAAD,iBACGE,QADH,IACGA,OADH,EACGA,EAAgBU,KAAI,SAACxB,EAAYC,GAChC,OACE,cAAC,EAAD,CAEED,WAAYA,EACZC,MAAOA,EACPI,SAAUY,IAAgBhB,GAHrBA,SCpDJkC,EAAUrC,IAAO2B,QAAV,oMAGR,qBAAGW,UAEO,qBAAGC,cCqBVC,MAtBf,WACE,IAAMC,EAAUC,mBACVC,EAAUD,mBACVE,EAAUF,mBAHH,EAI8BpC,qBAJ9B,mBAINU,EAJM,KAIU6B,EAJV,KAYb,OANAzB,qBAAU,WACJqB,EAAQK,SACVD,EAAiB,CAACJ,EAAQK,QAASH,EAAQG,QAASF,EAAQE,YAE7D,IAGD,sBAAKnC,UAAU,MAAf,UACE,cAAC0B,EAAD,CAASU,IAAKN,EAASH,OAAO,QAAQC,WAAW,cACjD,cAACF,EAAD,CAASU,IAAKJ,EAASL,OAAO,SAASC,WAAW,eAClD,cAACF,EAAD,CAASU,IAAKH,EAASN,OAAO,SAASC,WAAW,UACjDvB,GAAkB,cAAC,EAAD,CAAYA,eAAgBA,QCVtCgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f79f76f7.chunk.js","sourcesContent":["import styled from 'styled-components';\nexport const Dot = styled.div`\n  width: 22px;\n  height: 22px;\n  margin: 7px auto;\n  border-radius: 50%;\n  background-color: #fff;\n  &.active {\n    background-color: #006999;\n  }\n`;\n","import Dot from './Dot';\nexport default Dot;\n","import React, { useState } from 'react';\nimport { Dot } from './Styled';\nimport classnames from 'classnames';\n\n/**\n * 1. dot active as page scroll\n * 2. click dot to scroll\n */\nconst DotComp = ({ sectionRef, index }) => {\n  const { y } = sectionRef.getBoundingClientRect();\n  const [isActive, setIsActive] = useState();\n\n  /** 小豆豆被點擊 */\n  const handleClickDotForActive = () => {\n    sectionRef.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  /** 畫面滾動 */\n  const handleScrollSection = () => {\n    if (index === 1) {\n      console.log(window.pageYOffset);\n      console.log(y);\n    }\n    if (window.pageYOffset === y) {\n      console.log('kkkkk');\n      setIsActive(true);\n    }\n  };\n\n  return (\n    <Dot\n      onClick={handleClickDotForActive}\n      // onScroll={handleScrollSection}\n      className={classnames({\n        active: isActive,\n      })}\n    ></Dot>\n  );\n};\n\nexport default DotComp;\n","import styled from 'styled-components';\nexport const Dots = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  width: 30px;\n  position: fixed;\n  bottom: 142px;\n  right: 0;\n`;\n","import Pagination from './Pagination';\nexport default Pagination;\n","import React, { useState, useEffect } from 'react';\nimport Dot from '../Dot';\nimport { Dots } from './Styled';\n\nconst Pagination = ({ sectionsRefArr }) => {\n  const [activeOffsetRange, setActiveOffsetRange] = useState();\n  const [activeIndex, setActiveIndex] = useState();\n  useEffect(() => {\n    if (!sectionsRefArr) return null;\n    // console.log(activeOffsetRange);\n    if (activeOffsetRange) {\n      window.addEventListener('scroll', checkIsInActiveRange);\n      return;\n    }\n\n    getActiveIndexOffsetRange();\n  }, [activeOffsetRange]);\n\n  /** get active range of every section */\n  const getActiveIndexOffsetRange = () => {\n    const range = sectionsRefArr?.map((section, index) => {\n      const start = sectionsRefArr[index].getBoundingClientRect().top;\n      const end = sectionsRefArr[index].getBoundingClientRect().bottom;\n\n      return { start, end };\n    });\n    console.log('1232e432');\n    setActiveOffsetRange(range);\n  };\n\n  /**  check is Active */\n  const checkIsInActiveRange = () => {\n    /** big: page can full fullScreen to active\n     * small: not,page all in this screen to active\n     */\n\n    console.log('gg');\n    console.log(activeOffsetRange);\n    if (!activeOffsetRange) return;\n    const scrollOffset = window.pageYOffset;\n    console.log(activeOffsetRange);\n    const activeIndex = activeOffsetRange?.findIndex((range, index) => {\n      const { start, end } = range;\n      return scrollOffset >= start && scrollOffset < end;\n    });\n    console.log(activeIndex);\n  };\n\n  return (\n    <Dots>\n      {sectionsRefArr?.map((sectionRef, index) => {\n        return (\n          <Dot\n            key={index}\n            sectionRef={sectionRef}\n            index={index}\n            isActive={activeIndex === index}\n          />\n        );\n      })}\n    </Dots>\n  );\n};\n\nexport default Pagination;\n","import styled from 'styled-components';\nexport const Section = styled.section`\n  // }) //   return { height: height }; // .attrs(({ height }) => {\n  width: 100%;\n  height: ${({ height }) => height};\n  /* border-bottom: 5px solid brown; */\n  background-color: ${({ background }) => background};\n`;\n","import { useRef, useEffect, useState } from 'react';\nimport './App.css';\nimport Pagination from './component/Pagination';\nimport { Section } from './AppStyled';\n\nfunction App() {\n  const refSec1 = useRef();\n  const refSec2 = useRef();\n  const refSec3 = useRef();\n  const [sectionsRefArr, setSectionRefArr] = useState();\n\n  useEffect(() => {\n    if (refSec1.current) {\n      setSectionRefArr([refSec1.current, refSec2.current, refSec3.current]);\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Section ref={refSec1} height=\"100vh\" background=\"burlywood\" />\n      <Section ref={refSec2} height=\"2300px\" background=\"aquamarine\" />\n      <Section ref={refSec3} height=\"3380px\" background=\"coral\" />\n      {sectionsRefArr && <Pagination sectionsRefArr={sectionsRefArr} />}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}